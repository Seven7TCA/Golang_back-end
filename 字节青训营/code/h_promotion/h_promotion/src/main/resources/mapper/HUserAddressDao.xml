<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.camp.promotion.dao.HUserAddressDao">

    <resultMap type="com.camp.promotion.entity.HUserAddress" id="HUserAddressMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="beDefault" column="be_default" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="HUserAddressMap">
        select id,
               user_id,
               address,
               status,
               be_default,
               create_time,
               update_time
        from h_user_address
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="HUserAddressMap">
        select
        id, user_id, address, status, be_default, create_time, update_time
        from h_user_address
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="beDefault != null">
                and be_default = #{beDefault}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from h_user_address
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="beDefault != null">
                and be_default = #{beDefault}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into h_user_address(user_id, address, status, be_default, create_time, update_time)
        values (#{userId}, #{address}, #{status}, #{beDefault}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into h_user_address(user_id, address, status, be_default, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.address}, #{entity.status}, #{entity.beDefault}, #{entity.createTime},
            #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into h_user_address(user_id, address, status, be_default, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.address}, #{entity.status}, #{entity.beDefault}, #{entity.createTime},
            #{entity.updateTime})
        </foreach>
        on duplicate key update
        user_id = values(user_id),
        address = values(address),
        status = values(status),
        be_default = values(be_default),
        create_time = values(create_time),
        update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update h_user_address
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="beDefault != null">
                be_default = #{beDefault},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from h_user_address
        where id = #{id}
    </delete>

</mapper>

